---
- name: Install and configure MariaDB server on CentOS
  hosts: centos
  become: yes
  vars:
    mysql_database: "testdb"
    mysql_user: "testuser"
    mysql_user_password: "userpass123"

  tasks:
    - name: Install MariaDB server
      dnf:
        name:
          - mariadb-server
          - mariadb
        state: present

    - name: Stop any running MariaDB processes forcefully
      shell: |
        pkill -9 mysqld || true
        pkill -9 mariadb || true
        sleep 3
      changed_when: true

    - name: Remove existing data directory to start fresh
      file:
        path: /var/lib/mysql
        state: absent
      ignore_errors: yes

    - name: Create MySQL data directory
      file:
        path: /var/lib/mysql
        state: directory
        owner: mysql
        group: mysql
        mode: '0755'

    - name: Initialize MariaDB data directory
      command: mysql_install_db --user=mysql
      changed_when: true

    - name: Start MariaDB with no authentication
      shell: |
        mariadbd --user=mysql --skip-grant-tables --skip-networking --socket=/var/lib/mysql/mysql.sock &
      changed_when: true

    - name: Wait for MySQL socket
      wait_for:
        path: /var/lib/mysql/mysql.sock
        delay: 10
        timeout: 60

    - name: Reset root password using mysql_native_password
      shell: |
        mysql -uroot -e "UPDATE mysql.user SET plugin='mysql_native_password', authentication_string=PASSWORD('{{ mysql_user_password }}') WHERE User='root';"
        mysql -uroot -e "FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash

    - name: Stop MariaDB
      shell: |
        pkill mariadbd
        sleep 2
      changed_when: true

    - name: Start MariaDB normally
      shell: |
        mariadbd --user=mysql --socket=/var/lib/mysql/mysql.sock --port=3306 &
      changed_when: true

    - name: Wait for MySQL port
      wait_for:
        port: 3306
        delay: 10
        timeout: 60

    - name: Test root connection with new password
      shell: |
        mysql -uroot -p"{{ mysql_user_password }}" -e "SELECT 1;"
      args:
        executable: /bin/bash

    - name: Secure MariaDB installation
      shell: |
        mysql -uroot -p"{{ mysql_user_password }}" -e "DELETE FROM mysql.user WHERE User='';"
        mysql -uroot -p"{{ mysql_user_password }}" -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
        mysql -uroot -p"{{ mysql_user_password }}" -e "DROP DATABASE IF EXISTS test;"
        mysql -uroot -p"{{ mysql_user_password }}" -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
        mysql -uroot -p"{{ mysql_user_password }}" -e "FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash

    - name: Create database
      shell: |
        mysql -uroot -p"{{ mysql_user_password }}" -e "CREATE DATABASE IF NOT EXISTS {{ mysql_database }};"
      args:
        executable: /bin/bash

    - name: Create application user with password
      shell: |
        mysql -uroot -p"{{ mysql_user_password }}" -e "CREATE USER IF NOT EXISTS '{{ mysql_user }}'@'localhost' IDENTIFIED BY '{{ mysql_user_password }}';"
        mysql -uroot -p"{{ mysql_user_password }}" -e "GRANT ALL PRIVILEGES ON {{ mysql_database }}.* TO '{{ mysql_user }}'@'localhost';"
        mysql -uroot -p"{{ mysql_user_password }}" -e "FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash

    - name: Create sample table
      shell: |
        mysql -uroot -p"{{ mysql_user_password }}" -e "USE {{ mysql_database }}; CREATE TABLE IF NOT EXISTS users (id INT AUTO_INCREMENT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);"
      args:
        executable: /bin/bash

    - name: Insert sample data
      shell: |
        mysql -uroot -p"{{ mysql_user_password }}" -e "USE {{ mysql_database }}; INSERT IGNORE INTO users (username, email) VALUES ('alice', 'alice@example.com'), ('bob', 'bob@example.com'), ('charlie', 'charlie@example.com');"
      args:
        executable: /bin/bash

    - name: Verify table creation
      shell: |
        mysql -uroot -p"{{ mysql_user_password }}" -e "USE {{ mysql_database }}; SHOW TABLES;"
      register: tables_result
      args:
        executable: /bin/bash

    - name: Verify data insertion
      shell: |
        mysql -uroot -p"{{ mysql_user_password }}" -e "USE {{ mysql_database }}; SELECT COUNT(*) as user_count FROM users;"
      register: users_result
      args:
        executable: /bin/bash

    - name: Show verification results
      debug:
        msg:
          - "Database tables: {{ tables_result.stdout }}"
          - "Number of users: {{ users_result.stdout }}"

    - name: Test MySQL connectivity with application user
      shell: |
        mysql -u"{{ mysql_user }}" -p"{{ mysql_user_password }}" -e "SELECT 1 as connection_test;"
      register: connection_test
      args:
        executable: /bin/bash

    - name: Show connection test result
      debug:
        msg: "MySQL connection test successful: {{ connection_test.stdout }}"